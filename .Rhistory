year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
sos <- THREES_PG('2023-24')
year <- paste0(1996:2002, '-', substr(1997:2003, 3, 4))
# map all single dfs into one
threes_PG <- map_df(year, THREES_PG)
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
### Threes PER GAME function ----
threes <- function(season) {
url <- paste0(url <- 'https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_data <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_data) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_data$Season <- season
threes_data <- threes_data[, -c(6:10, 14:55)]
return(threes_data)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
### Threes PER GAME function ----
THREES_PG <- function(season) {
url <- paste0(url <- 'https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_pg_data <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_pg_data) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_pg_data$Season <- season
threes_pg_data <- threes_pg_data[, -c(6:10, 14:55)]
return(threes_pg_data)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
sos <- THREES_PG('2023-24')
library(tictoc)
tic()
threes_PG <- map_df(year, THREES_PG)
library(tidyverse)
library(jsonlite)
library(httr)
library(ggplot2)
library(ggthemes)
# custom theme
theme_davide <- function() {
theme_fivethirtyeight(base_family = 'avenir') %+replace%
theme(
text = element_text(family='avenir'),
axis.title.x = element_text(face='bold', size=14, margin=margin(t=10)),
axis.title.y = element_text(face='bold', size=14, margin=margin(r=10), angle = 90),
axis.text.x = element_text(face='bold'),
axis.text.y = element_text(face='bold'),
panel.background = element_rect('floralwhite'),
plot.background = element_rect('floralwhite'),
plot.title = element_text(face='bold', size=17, hjust = 0),
plot.subtitle=element_text(size=12, hjust = 0, vjust = -1),
panel.grid.major = element_line(color='gray90', linetype = 'dashed'),
plot.margin = margin(.5, .5, .25, .5, "cm")
)
}
## PACE ====
# headers
headers <- c(
`Connection` = 'keep-alive',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`X-NewRelic-ID` = 'VQECWF5UChAHUlNTBwgBVw==',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://stats.nba.com/players/shooting/',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
### Threes PER GAME function ----
THREES_PG <- function(season) {
url <- paste0('https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_pg <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_pg) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_pg$Season <- season
# threes_pg <- threes_pg[, -c(6:10, 14:55)]
return(threes_pg)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
threes_PG <- map_df(year, THREES_PG)
View(threes_PG)
THREES_PG('2023-24')
sos THREES_PG('2023-24')
sos <- THREES_PG('2023-24')
View(sos)
threes_PG <- map(year, THREES_PG) %>%
bind_rows()
View(threes_PG)
THREES_PG <- function(season) {
url <- paste0('https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
# Debugging print statements
print(paste("Processing season:", season))
print("JSON response structure:")
print(str(json_resp))  # Print structure of the JSON response
threes_pg <- data.frame(json_resp$resultSets$rowSet)
# Ensure headers are correctly assigned
colnames(threes_pg) <- json_resp[["resultSets"]][["headers"]][[1]]
# Debugging to ensure columns are correctly named
print("Data frame structure before adding Season column:")
print(str(threes_pg))
# Add specific column indicating season
threes_pg$Season <- season
# Debugging to ensure Season column is added
print("Data frame after adding Season column:")
print(head(threes_pg))
return(threes_pg)
}
sos <- THREES_PG('2023-24')
sos <- sos[, -c(20:30)]
View(sos)
### Threes PER GAME function ----
THREES_PG <- function(season) {
url <- paste0('https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_pg <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_pg) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_pg$Season <- season
threes_pg <- threes_pg[, -c(6:10, 14:54)]
return(threes_pg)
}
sos <- THREES_PG('2023-24')
tic()
library(tidyverse)
library(jsonlite)
library(httr)
library(ggplot2)
library(ggthemes)
library(tictoc)
tic()
threes_PG <- map_df(year, THREES_PG)
toc()
### Threes TOTALS function ----
THREES_TOT <- function(season) {
url <- paste0(
'https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=Totals&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision='
)
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_tot_data <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_tot_data) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_tot_data$Season <- season
threes_tot_data <- threes_tot_data[, -c(6:10, 14:55)]
return(threes_tot_data)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
tic()
threes_TOT <- map_df(year, THREES_TOT)
toc()
View(threes_TOT)
threes_tot_data <- threes_tot_data[, -c(6:10, 14:54)]
### Threes TOTALS function ----
THREES_TOT <- function(season) {
url <- paste0(
'https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=&LastNGames=0&LeagueID=00&Location=&MeasureType=Base&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=Totals&Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision='
)
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
threes_tot <- data.frame(json_resp$resultSets$rowSet)
colnames(threes_tot) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
threes_tot$Season <- season
threes_tot <- threes_tot[, -c(6:10, 14:54)]
return(threes_tot)
}
tic()
threes_TOT <- map_df(year, THREES_TOT)
toc()
library(tidyverse)
library(jsonlite)
library(httr)
library(ggplot2)
library(ggthemes)
library(tictoc)
# custom theme
theme_davide <- function() {
theme_fivethirtyeight(base_family = 'avenir') %+replace%
theme(
text = element_text(family='avenir'),
axis.title.x = element_text(face='bold', size=14, margin=margin(t=10)),
axis.title.y = element_text(face='bold', size=14, margin=margin(r=10), angle = 90),
axis.text.x = element_text(face='bold'),
axis.text.y = element_text(face='bold'),
panel.background = element_rect('floralwhite'),
plot.background = element_rect('floralwhite'),
plot.title = element_text(face='bold', size=17, hjust = 0),
plot.subtitle=element_text(size=12, hjust = 0, vjust = -1),
panel.grid.major = element_line(color='gray90', linetype = 'dashed'),
plot.margin = margin(.5, .5, .25, .5, "cm")
)
}
## PACE ====
# headers
headers <- c(
`Connection` = 'keep-alive',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`X-NewRelic-ID` = 'VQECWF5UChAHUlNTBwgBVw==',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://stats.nba.com/players/shooting/',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
# Scraping function depending on season (season format: 2023-24)
### Pace function ----
pace <- function(season) {
url <- paste0('https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=',
'&LastNGames=0&LeagueID=00&Location=&MeasureType=Advanced&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&',
'Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
pace_data <- data.frame(json_resp$resultSets$rowSet)
colnames(pace_data) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
pace_data$Season <- season
pace_data <- pace_data[, - c(8, 10:23, 25, 27:46)]
return(pace_data)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
# map all single dfs into one
df <- map_df(year, pace)
View(df)
head(df)
head(df[1:5, 9, 11])
head(df[c(1:5, 9, 11)])
ses <- pace('2023-24')
head(ses[c(1:5, 9, 11)])
# convert to numeric
df$PACE <- as.numeric(df$PACE)
avg_pace <- df %>%
group_by(Season) %>%
summarise(avg_pace = mean(PACE)) %>%
mutate(Season = factor(Season, levels = unique(Season)))
avg_pace$year <- gsub('-.*', '', avg_pace$Season) %>%
as.numeric(avg_pace$year)
View(avg_pace)
avg_pace$year <- avg_pace$year + 1
head(avg_pace[c(1:2)])
library(tidyverse)
library(jsonlite)
library(httr)
library(ggplot2)
library(ggthemes)
library(tictoc)
# custom theme
theme_davide <- function() {
theme_fivethirtyeight(base_family = 'avenir') %+replace%
theme(
text = element_text(family='avenir'),
axis.title.x = element_text(face='bold', size=14, margin=margin(t=10)),
axis.title.y = element_text(face='bold', size=14, margin=margin(r=10), angle = 90),
axis.text.x = element_text(face='bold'),
axis.text.y = element_text(face='bold'),
panel.background = element_rect('floralwhite'),
plot.background = element_rect('floralwhite'),
plot.title = element_text(face='bold', size=17, hjust = 0),
plot.subtitle=element_text(size=12, hjust = 0, vjust = -1),
panel.grid.major = element_line(color='gray90', linetype = 'dashed'),
plot.margin = margin(.5, .5, .25, .5, "cm")
)
}
## PACE ====
# headers
headers <- c(
`Connection` = 'keep-alive',
`Accept` = 'application/json, text/plain, */*',
`x-nba-stats-token` = 'true',
`X-NewRelic-ID` = 'VQECWF5UChAHUlNTBwgBVw==',
`User-Agent` = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36',
`x-nba-stats-origin` = 'stats',
`Sec-Fetch-Site` = 'same-origin',
`Sec-Fetch-Mode` = 'cors',
`Referer` = 'https://stats.nba.com/players/shooting/',
`Accept-Encoding` = 'gzip, deflate, br',
`Accept-Language` = 'en-US,en;q=0.9'
)
# Scraping function depending on season (season format: 2023-24)
### Pace function ----
pace <- function(season) {
url <- paste0('https://stats.nba.com/stats/leaguedashteamstats?Conference=&DateFrom=&DateTo=&Division=&GameScope=&GameSegment=&Height=&ISTRound=',
'&LastNGames=0&LeagueID=00&Location=&MeasureType=Advanced&Month=0&OpponentTeamID=0&Outcome=&PORound=0&PaceAdjust=N&PerMode=PerGame&',
'Period=0&PlayerExperience=&PlayerPosition=&PlusMinus=N&Rank=N&Season=',
season,
'&SeasonSegment=&SeasonType=Regular%20Season&ShotClockRange=&StarterBench=&TeamID=0&TwoWay=0&VsConference=&VsDivision=')
res <- GET(url = url, add_headers(.headers=headers))
json_resp <- fromJSON(content(res, "text"))
pace_data <- data.frame(json_resp$resultSets$rowSet)
colnames(pace_data) <- json_resp[["resultSets"]][["headers"]][[1]]
# adds specific column indicating season
pace_data$Season <- season
pace_data <- pace_data[, - c(8, 10:23, 25, 27:46)]
return(pace_data)
}
# vector of years since 1996, with correct format for url
year <- paste0(1996:2023, '-', substr(1997:2024, 3, 4))
# map all single dfs into one
df <- map_df(year, pace)
df$PACE <- as.numeric(df$PACE)
avg_pace <- df %>%
group_by(Season) %>%
summarise(avg_pace = mean(PACE)) %>%
mutate(Season = factor(Season, levels = unique(Season)))
avg_pace$year <- gsub('-.*', '', avg_pace$Season) %>%
as.numeric(avg_pace$year)
avg_pace$year <- avg_pace$year + 1
ggplot(
avg_pace,
aes(x = year, y = avg_pace, group = 1)
) +
geom_line(
color = 'grey80',
size = 2
) +
geom_point(
shape = 21,
color = 'black',
fill = 'dodgerblue',
size = 4
) +
#geom_smooth(method = 'lm', color = 'firebrick3') +
theme_davide() +
theme(
axis.title.x = element_text(margin = margin(t = 15)),
plot.title = element_text(margin = margin(b=1), size = 20),
plot.subtitle = element_text(margin = margin(b = 10))
) +
labs(
x = 'NBA Regular Season',
y = 'Average Pace',
title = 'Evolution of Pace in the NBA',
subtitle = 'Progression of average league pace over the years. Data from 1996-97 season to 2023-24 season.'
) +
scale_x_continuous(
breaks = c(seq(1997, 2024, 4), 2024)
) +
scale_y_continuous(
breaks = c(90, 92.5, 95, 97.5, 100, 102.5)
)
ggplot(
avg_pace,
aes(x = year, y = avg_pace, group = 1)
) +
geom_line(
color = 'grey80',
size = 2
) +
geom_point(
shape = 21,
color = 'black',
fill = 'dodgerblue',
size = 4
) +
#geom_smooth(method = 'lm', color = 'firebrick3') +
theme_davide() +
theme(
axis.title.x = element_text(margin = margin(t = 15)),
plot.title = element_text(margin = margin(b=1), size = 24),
plot.subtitle = element_text(margin = margin(b = 10), size = 17)
) +
labs(
x = 'NBA Regular Season',
y = 'Average Pace',
title = 'Evolution of Pace in the NBA',
subtitle = 'Progression of average league pace over the years. Data from 1996-97 season to 2023-24 season.'
) +
scale_x_continuous(
breaks = c(seq(1997, 2024, 4), 2024)
) +
scale_y_continuous(
breaks = c(90, 92.5, 95, 97.5, 100, 102.5)
)
ggsave('/Users/davidetissino/Desktop/Average_Pace_Trend.png', dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/foto/Average_Pace_Trend.png', dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/pace_evolution.png', dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/foto/pace_evolution.png', dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/graphs/pace_evolution.png', dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/graphs/pace_evolution.png', width = 10, height = 7 dpi = 'retina')
ggsave('/Users/davidetissino/Desktop/Last/Tesi/graphs/pace_evolution.png', width = 10, height = 7, dpi = 'retina')
# custom theme
theme_davide <- function() {
theme_fivethirtyeight(base_family = 'avenir') %+replace%
theme(
text = element_text(family='avenir'),
axis.title.x = element_text(face='bold', size=15, margin=margin(t=15)),
axis.title.y = element_text(face='bold', size=15, margin=margin(r=15), angle = 90),
axis.text.x = element_text(face='bold', size = 10),
axis.text.y = element_text(face='bold', size = 10),
panel.background = element_rect('floralwhite'),
plot.background = element_rect('floralwhite'),
plot.title = element_text(face='bold', size=17, hjust = 0),
plot.subtitle=element_text(size=12, hjust = 0, vjust = -1),
panel.grid.major = element_line(color='gray90', linetype = 'dashed'),
plot.margin = margin(.5, .5, .25, .5, "cm")
)
}
ggplot(
avg_pace,
aes(x = year, y = avg_pace, group = 1)
) +
geom_line(
color = 'grey80',
size = 2
) +
geom_point(
shape = 21,
color = 'black',
fill = 'dodgerblue',
size = 4
) +
#geom_smooth(method = 'lm', color = 'firebrick3') +
theme_davide() +
theme(
axis.title.x = element_text(margin = margin(t = 15)),
plot.title = element_text(margin = margin(b=1), size = 24),
) +
labs(
x = 'NBA Regular Season',
y = 'Average Pace',
title = 'Evolution of Pace in the NBA',
) +
scale_x_continuous(
breaks = c(seq(1997, 2024, 4), 2024)
) +
scale_y_continuous(
breaks = c(90, 92.5, 95, 97.5, 100, 102.5)
)
ggsave('/Users/davidetissino/Desktop/Last/Tesi/graphs/pace_evolution.png', dpi = 'retina')
# custom theme
theme_davide <- function() {
theme_fivethirtyeight(base_family = 'avenir') %+replace%
theme(
text = element_text(family='avenir'),
axis.title.x = element_text(face='bold', size=17, margin=margin(t=15)),
axis.title.y = element_text(face='bold', size=17, margin=margin(r=15), angle = 90),
axis.text.x = element_text(face='bold', size = 13),
axis.text.y = element_text(face='bold', size = 13),
panel.background = element_rect('floralwhite'),
plot.background = element_rect('floralwhite'),
plot.title = element_text(face='bold', size=17, hjust = 0),
plot.subtitle=element_text(size=12, hjust = 0, vjust = -1),
panel.grid.major = element_line(color='gray90', linetype = 'dashed'),
plot.margin = margin(.5, .5, .25, .5, "cm")
)
}
ggplot(
avg_pace,
aes(x = year, y = avg_pace, group = 1)
) +
geom_line(
color = 'grey80',
size = 2
) +
geom_point(
shape = 21,
color = 'black',
fill = 'dodgerblue',
size = 4
) +
#geom_smooth(method = 'lm', color = 'firebrick3') +
theme_davide() +
theme(
axis.title.x = element_text(margin = margin(t = 20)),
plot.title = element_text(margin = margin(b=10), size = 25),
) +
labs(
x = 'NBA Regular Season',
y = 'Average Pace',
title = 'Evolution of Pace in the NBA',
) +
scale_x_continuous(
breaks = c(seq(1997, 2024, 4), 2024)
) +
scale_y_continuous(
breaks = c(90, 92.5, 95, 97.5, 100, 102.5)
)
ggsave('/Users/davidetissino/Desktop/Last/Tesi/graphs/pace_evolution.png', dpi = 'retina')
